(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),A=t.n(i),a=t(667),s=t.n(a),d=new URL(t(960),t.b),c=A()(r()),l=s()(d);c.push([n.id,`/* /* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n*/\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\n/* Meyers End */\n\nbody {\n    display: flex;\n    flex-direction: column;\n    color: #112a46;\n    overflow: scroll;\n    background: #acc8e5;\n}\nheader {\n    background: #9ab7d4;\n    height: 10vh;\n    font-size: 2.5em;\n    display: flex;\n    align-items: center;\n    padding: 25px;\n    box-sizing: border-box;\n    justify-content: space-between;\n}\n\nmain {\n    height: max-content;\n    color: #112a46;\n    flex-grow: 1;\n    width: 100%;\n    height: 90vh;\n    padding-bottom: 50px;\n    padding-top: 100px;\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n@font-face {\n    font-family: 'videophreak';\n    src: url(${l});\n}\n\nheader > p {\n    font-family: 'videophreak';\n}\n\nheader img,\nheader a {\n    --sizing: 1.7em;\n    height: var(--sizing);\n    width: var(--sizing);\n}\n\n.cont {\n    position: relative;\n    margin-top: 100px;\n    width: 100vw;\n    padding-bottom: 50px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    gap: 12px;\n    flex-wrap: wrap;\n    row-gap: 40px;\n}\n\n.gameboard1,\n.gameboard2,\n.secbox {\n    min-width: 250px;\n    min-height: 250px;\n    height: 40vh;\n    width: 40vh;\n    max-height: 400px;\n    max-width: 400px;\n    background: #9ab7d4;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n}\n\n.secbox {\n    border: 2px solid black;\n}\n.gameboard1 > div,\n.gameboard2 > div {\n    flex-grow: 1;\n    display: flex;\n}\n\n.gameboard1 > div > div,\n.gameboard2 > div > div {\n    border: 1px solid black;\n    flex-grow: 1;\n}\n\n.secbox {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    font-size: 4vw;\n    align-items: center;\n}\n\n.cont > div > button {\n    font-size: 0.8em;\n    width: 60%;\n    background: #acc8e5;\n    border: 2px solid black;\n    border-radius: 100px;\n    height: 40px;\n    font-size: 1em;\n}\n\n.secbox > div {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr;\n    gap: 8px;\n}\n\n.secbox > div > p:first-of-type {\n    font-size: 1.1em;\n}\n\n.secbox > div > p {\n    text-align: center;\n}\n\n.cont > div > button:hover {\n    transform: scale(1.05);\n    transition: transform 0.2s;\n}\n\n.gameboard1,\n.gameboard2,\nbutton {\n    cursor: pointer;\n}\n\n.cont p {\n    text-align: center;\n    font-size: 1.3em;\n    margin-bottom: 8px;\n}\n\n.cont {\n    margin-top: 150px;\n}\n\n.gm2 {\n    visibility: hidden;\n    position: absolute;\n}\n\n.cont > div:last-of-type {\n    position: absolute;\n    height: 100px;\n    width: clamp(200px, 40vw, 500px);\n    bottom: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 50px;\n    background: #9ab7d4;\n    justify-content: center;\n    border: 2px solid black;\n    border-radius: 10px;\n}\n\n.preview,\n.placed {\n    background: #077187;\n}\n\n.hit {\n    background: #d00000;\n}\n\n.hit.placed,\n.hit.oppPlaced {\n    background: #70e000;\n}\n/* Result screen styling */\n.endScreen {\n    transform: scale(0.001);\n    position: absolute;\n    border: 2px solid #1e8499;\n    border-radius: 20px;\n    height: 25vh;\n    width: 30vw;\n    padding-bottom: 20px;\n    background: #9ab7d4;\n    display: grid;\n    grid-template: min-content 1fr / 1fr;\n    visibility: visible;\n}\n\n.endTop {\n    background: #1e8499;\n    padding: 10px 20px 5px 20px;\n    border-radius: 18px 18px 0px 0px;\n}\n\n.endTop > p {\n    text-align: center;\n    color: white;\n    font-size: 1.4em;\n}\n\n.endScreen p,\n.endScreen button {\n    text-align: center;\n    align-self: center;\n    font-size: 1.5em;\n}\n\n.endScreen button {\n    font-size: 1.1em;\n    width: 80%;\n    background: #1e8499;\n    border: 0px;\n    transition: transform 0.3s;\n    border-radius: 20px;\n    height: min-content;\n    color: white;\n}\n\n.endScreen button:hover {\n    transform: scale(1.05);\n}\n\n.endMain {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.endAni {\n    transform: scale(1);\n    transition: transform 0.2s;\n}\n\n.cover {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    visibility: hidden;\n    background: rgba(0, 0, 0, 0.45);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\nheader a:hover {\n    cursor: pointer;\n    transform: rotate(1turn);\n    transition: transform 0.55s;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["/* /* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n*/\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\n/* Meyers End */\n\nbody {\n    display: flex;\n    flex-direction: column;\n    color: #112a46;\n    overflow: scroll;\n    background: #acc8e5;\n}\nheader {\n    background: #9ab7d4;\n    height: 10vh;\n    font-size: 2.5em;\n    display: flex;\n    align-items: center;\n    padding: 25px;\n    box-sizing: border-box;\n    justify-content: space-between;\n}\n\nmain {\n    height: max-content;\n    color: #112a46;\n    flex-grow: 1;\n    width: 100%;\n    height: 90vh;\n    padding-bottom: 50px;\n    padding-top: 100px;\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n@font-face {\n    font-family: 'videophreak';\n    src: url('./videophreak/VIDEOPHREAK.ttf');\n}\n\nheader > p {\n    font-family: 'videophreak';\n}\n\nheader img,\nheader a {\n    --sizing: 1.7em;\n    height: var(--sizing);\n    width: var(--sizing);\n}\n\n.cont {\n    position: relative;\n    margin-top: 100px;\n    width: 100vw;\n    padding-bottom: 50px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    gap: 12px;\n    flex-wrap: wrap;\n    row-gap: 40px;\n}\n\n.gameboard1,\n.gameboard2,\n.secbox {\n    min-width: 250px;\n    min-height: 250px;\n    height: 40vh;\n    width: 40vh;\n    max-height: 400px;\n    max-width: 400px;\n    background: #9ab7d4;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n}\n\n.secbox {\n    border: 2px solid black;\n}\n.gameboard1 > div,\n.gameboard2 > div {\n    flex-grow: 1;\n    display: flex;\n}\n\n.gameboard1 > div > div,\n.gameboard2 > div > div {\n    border: 1px solid black;\n    flex-grow: 1;\n}\n\n.secbox {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    font-size: 4vw;\n    align-items: center;\n}\n\n.cont > div > button {\n    font-size: 0.8em;\n    width: 60%;\n    background: #acc8e5;\n    border: 2px solid black;\n    border-radius: 100px;\n    height: 40px;\n    font-size: 1em;\n}\n\n.secbox > div {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr;\n    gap: 8px;\n}\n\n.secbox > div > p:first-of-type {\n    font-size: 1.1em;\n}\n\n.secbox > div > p {\n    text-align: center;\n}\n\n.cont > div > button:hover {\n    transform: scale(1.05);\n    transition: transform 0.2s;\n}\n\n.gameboard1,\n.gameboard2,\nbutton {\n    cursor: pointer;\n}\n\n.cont p {\n    text-align: center;\n    font-size: 1.3em;\n    margin-bottom: 8px;\n}\n\n.cont {\n    margin-top: 150px;\n}\n\n.gm2 {\n    visibility: hidden;\n    position: absolute;\n}\n\n.cont > div:last-of-type {\n    position: absolute;\n    height: 100px;\n    width: clamp(200px, 40vw, 500px);\n    bottom: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 50px;\n    background: #9ab7d4;\n    justify-content: center;\n    border: 2px solid black;\n    border-radius: 10px;\n}\n\n.preview,\n.placed {\n    background: #077187;\n}\n\n.hit {\n    background: #d00000;\n}\n\n.hit.placed,\n.hit.oppPlaced {\n    background: #70e000;\n}\n/* Result screen styling */\n.endScreen {\n    transform: scale(0.001);\n    position: absolute;\n    border: 2px solid #1e8499;\n    border-radius: 20px;\n    height: 25vh;\n    width: 30vw;\n    padding-bottom: 20px;\n    background: #9ab7d4;\n    display: grid;\n    grid-template: min-content 1fr / 1fr;\n    visibility: visible;\n}\n\n.endTop {\n    background: #1e8499;\n    padding: 10px 20px 5px 20px;\n    border-radius: 18px 18px 0px 0px;\n}\n\n.endTop > p {\n    text-align: center;\n    color: white;\n    font-size: 1.4em;\n}\n\n.endScreen p,\n.endScreen button {\n    text-align: center;\n    align-self: center;\n    font-size: 1.5em;\n}\n\n.endScreen button {\n    font-size: 1.1em;\n    width: 80%;\n    background: #1e8499;\n    border: 0px;\n    transition: transform 0.3s;\n    border-radius: 20px;\n    height: min-content;\n    color: white;\n}\n\n.endScreen button:hover {\n    transform: scale(1.05);\n}\n\n.endMain {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.endAni {\n    transform: scale(1);\n    transition: transform 0.2s;\n}\n\n.cover {\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    visibility: hidden;\n    background: rgba(0, 0, 0, 0.45);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\nheader a:hover {\n    cursor: pointer;\n    transform: rotate(1turn);\n    transition: transform 0.55s;\n}\n"],sourceRoot:""}]);const p=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&A[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],d=o.base?s[0]+o.base:s[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:m,references:1})}A.push(l)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var s=o(n,r),d=0;d<i.length;d++){var c=t(i[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},960:(n,e,t)=>{n.exports=t.p+"9a02de9e536394ee0026.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),A=t.n(i),a=t(565),s=t.n(a),d=t(216),c=t.n(d),l=t(589),p=t.n(l),u=t(426),m={};function B(n,e){const t=[],o=[];let r=!0;const i=[];for(let e=0;e<n;e++)t.push([]);return t.forEach((n=>{for(let t=0;t<e;t++)n[t]=!1})),{getBoard:()=>t,place:(n,e,i)=>{let A=1,a=2;o.push(i);const s=o[o.indexOf(i)];if(r)for(let r=0;r<s.getLength();r++)e-r-1<0?t[n-1][parseInt(e,10)-1+A++]=o.indexOf(i):t[n-1][e-r-1]=o.indexOf(i);else for(let r=0;r<s.getLength();r++)parseInt(n,10)+r>t.length?t[n-a++][e-1]=o.indexOf(i):t[n-1+r][e-1]=o.indexOf(i)},receiveAttack:(n,e)=>{const r=t[n-1][e-1];"number"==typeof r&&r>=0&&o[r].hit(),i.push([n-1,e-1])},attackHistory:()=>i,allSunk:()=>o.every((n=>n.isSunk())),changeAxis:()=>{r=!r},previewPlace:(n,e,t)=>{document.querySelector(".hovering")&&document.querySelector(".hovering").classList.remove("hovering"),document.querySelectorAll(".gameboard1>div>div")[10*parseInt(n,10)+parseInt(e,10)-11].classList.add("hovering");let o=1;const i=document.querySelectorAll(".preview");if(i.length>0&&i.forEach((n=>{n.classList.remove("preview")})),r)for(let r=0;r<t;r++)parseInt(e,10)-1-r<0?document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11+o++].classList.add("preview"):document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11-r].classList.add("preview");else for(let r=0;r<t;r++)n-1+r>9?document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11-10*o++].classList.add("preview"):document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11+10*r].classList.add("preview")},getAxis:()=>r}}function f(n){const e=n;let t=0;return{getLength:()=>e,getHits:()=>t,isSunk:()=>t>=e,hit:()=>{t++}}}function b(){let n;const e=B(10,10),t=document.querySelectorAll(".gameboard2 > div > div"),o=document.querySelectorAll(".gameboard1 > div > div"),r=[],i=n=>Math.floor(Math.random()*n);o.forEach((n=>{r.push(n)}));const A=(n,t,o)=>{const r=e.getBoard();let i=1,A=2;const a=[];if(e.getAxis())for(let e=0;e<Math.floor(o);e++)t-e-1<0?a.push(r[n-1][parseInt(t,10)-1+i++]):a.push(r[n-1][t-e-1]);else for(let e=0;e<Math.floor(o);e++)parseInt(n,10)+e>9?a.push(r[n-A++][t-1]):a.push(r[n-1+e][t-1]);return a.every((n=>!1===n))},a=n=>{if(n<2)return;0===i(2)&&e.changeAxis();let t=i(10)+1,o=i(10)+1;for(;!A(t,o,n);)t=i(10)+1,o=i(10)+1;e.place(t,o,f(Math.floor(n))),a(4===n||3.5===n?n-.5:n-1)};return{start:o=>{n=o;const A=document.querySelector(".gm2"),s=document.querySelector(".cont > div:last-of-type");A.style.visibility="visible",A.style.position="static",s.style.position="absolute",s.style.visibility="hidden",document.querySelector(".gameboard1").style.cursor="default",a(5),(()=>{const n=e.getBoard();for(let e=0;e<10;e++)for(let o=0;o<10;o++)!1!==n[e][o]&&t[10*e+o].classList.add("oppPlaced")})(),document.querySelectorAll(".gameboard2 > div > div").forEach((t=>{t.addEventListener("click",(()=>{if(!t.classList.contains("hit")){const o=document.querySelector(".cover");t.classList.add("hit"),e.receiveAttack(t.parentNode.getAttribute("data"),t.getAttribute("data")),e.allSunk()&&(o.style.visibility="visible",document.querySelector(".endScreen").classList.add("endAni")),(()=>{const e=i(r.length),t=r[e];r.splice(e,1),n.receiveAttack(t.parentNode.getAttribute("data"),t.getAttribute("data")),t.classList.add("hit")})(),n.allSunk()&&(o.style.visibility="visible",document.querySelector(".winnerDisplay").textContent="You Lost!",document.querySelector(".endScreen").classList.add("endAni"))}}))}))}}}m.styleTagTransform=p(),m.setAttributes=s(),m.insert=A().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals,t.p,t.p,(()=>{const n=B(10,10),e=document.querySelector(".gameboard1"),t=document.querySelector(".gameboard2");let o=!1;const r=n=>{for(let e=0;e<10;e++){const t=document.createElement("div");t.setAttribute("data",e+1);for(let n=0;n<10;n++){const e=document.createElement("div");e.setAttribute("data",n+1),t.appendChild(e)}n.appendChild(t)}};r(e),r(t),document.querySelector(".cont > div > button").addEventListener("click",(()=>{n.changeAxis(),document.querySelectorAll(".preview").forEach((n=>{n.classList.remove("preview")}))}));const i=e=>{const t=[];document.querySelectorAll(".gameboard1 div div").forEach((r=>{r.addEventListener("mouseover",(()=>{n.previewPlace(r.parentNode.getAttribute("data"),r.getAttribute("data"),5-e)})),r.addEventListener("click",(()=>{document.querySelectorAll(".preview").forEach((n=>{n.classList.contains("placed")?t.push(!0):t.push(!1)})),t.includes(!0)?o=!1:(o=!0,n.place(r.parentNode.getAttribute("data"),r.getAttribute("data"),f(5-e)),document.querySelectorAll(".preview").forEach((n=>{n.classList.add("placed")})))}))}))};i(0),function e(t){document.querySelector(".gameboard1").addEventListener("click",(()=>{o?((n=>{const e=n.cloneNode(!0),t=n.parentNode;t.removeChild(n),t.appendChild(e)})(document.querySelector(".gameboard1")),t<4?(i(Math.floor(t)),e(t>=2&&t<3&&o?t+.5:o?t+1:t)):b().start(n)):i(2===t?t-1:3===t?Math.floor(t-.5):4===t?3:t)}))}(1),document.querySelector(".endMain > button").addEventListener("click",(()=>{location.reload()}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,