(()=>{"use strict";var n,e,t,o,r,a,i,A,c,s,d,l,p,u,f={426:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),c=t.n(A),s=new URL(t(960),t.b),d=i()(r()),l=c()(s);d.push([n.id,`/* /* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n*/\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\n/* Meyers End */\n\nbody {\n    display: flex;\n    flex-direction: column;\n    color: #112a46;\n    overflow: scroll;\n    background: #acc8e5;\n}\nheader {\n    background: #9ab7d4;\n    height: 10vh;\n    font-size: 2.5em;\n    display: flex;\n    align-items: center;\n    padding: 25px;\n    box-sizing: border-box;\n    justify-content: space-between;\n}\n\nmain {\n    height: max-content;\n    color: #112a46;\n    flex-grow: 1;\n    width: 100%;\n    height: 90vh;\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n@font-face {\n    font-family: 'videophreak';\n    src: url(${l});\n}\n\nheader > p {\n    font-family: 'videophreak';\n}\n\nheader > img {\n    --sizing: 1.7em;\n    height: var(--sizing);\n    width: var(--sizing);\n}\n\n.cont {\n    position: relative;\n    margin-top: 100px;\n    width: 100vw;\n    bottom: 50px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    gap: 12px;\n    flex-wrap: wrap;\n    row-gap: 40px;\n}\n\n.gameboard1,\n.gameboard2,\n.secbox {\n    min-width: 250px;\n    min-height: 250px;\n    height: 40vh;\n    width: 40vh;\n    max-height: 400px;\n    max-width: 400px;\n    background: #9ab7d4;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n}\n\n.secbox {\n    border: 2px solid black;\n}\n.gameboard1 > div,\n.gameboard2 > div {\n    flex-grow: 1;\n    display: flex;\n}\n\n.gameboard1 > div > div,\n.gameboard2 > div > div {\n    border: 1px solid black;\n    flex-grow: 1;\n}\n\n.secbox {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    font-size: 4vw;\n    align-items: center;\n}\n\n.cont > div > button {\n    font-size: 0.8em;\n    width: 60%;\n    background: #acc8e5;\n    border: 2px solid black;\n    border-radius: 100px;\n    height: 40px;\n    font-size: 1em;\n}\n\n.secbox > div {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr;\n    gap: 8px;\n}\n\n.secbox > div > p:first-of-type {\n    font-size: 1.1em;\n}\n\n.secbox > div > p {\n    text-align: center;\n}\n\n.cont > div > button:hover {\n    transform: scale(1.05);\n    transition: transform 0.2s;\n}\n\n.gameboard1,\n.gameboard2,\nbutton {\n    cursor: pointer;\n}\n\n.cont p {\n    text-align: center;\n    font-size: 1.3em;\n    margin-bottom: 8px;\n}\n\n.cont > div:first-of-type {\n    margin-top: 100px;\n}\n.gm2 {\n    visibility: hidden;\n    position: absolute;\n}\n\n.cont > div:last-of-type {\n    position: absolute;\n    height: 100px;\n    width: clamp(200px, 40vw, 500px);\n    bottom: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n    background: #9ab7d4;\n    justify-content: center;\n    border: 2px solid black;\n    border-radius: 10px;\n}\n\n.preview,\n.placed {\n    background: #077187;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8EI,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,wBAAwB;AAC5B;AACA;;;;;;;;;;;;;IAaI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,gBAAgB;AACpB;AACA;;IAEI,YAAY;AAChB;AACA;;;;IAII,WAAW;IACX,aAAa;AACjB;AACA;IACI,yBAAyB;IACzB,iBAAiB;AACrB;;AAEA,eAAe;;AAEf;IACI,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,gBAAgB;IAChB,mBAAmB;AACvB;AACA;IACI,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,mBAAmB;IACnB,cAAc;IACd,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;IAC1B,4CAAyC;AAC7C;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,SAAS;IACT,eAAe;IACf,aAAa;AACjB;;AAEA;;;IAGI,gBAAgB;IAChB,iBAAiB;IACjB,YAAY;IACZ,WAAW;IACX,iBAAiB;IACjB,gBAAgB;IAChB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;AAC3B;AACA;;IAEI,YAAY;IACZ,aAAa;AACjB;;AAEA;;IAEI,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,UAAU;IACV,mBAAmB;IACnB,uBAAuB;IACvB,oBAAoB;IACpB,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,4BAA4B;IAC5B,QAAQ;AACZ;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,0BAA0B;AAC9B;;AAEA;;;IAGI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,gCAAgC;IAChC,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,QAAQ;IACR,mBAAmB;IACnB,uBAAuB;IACvB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;IAEI,mBAAmB;AACvB",sourcesContent:["/* /* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n*/\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\n/* Meyers End */\n\nbody {\n    display: flex;\n    flex-direction: column;\n    color: #112a46;\n    overflow: scroll;\n    background: #acc8e5;\n}\nheader {\n    background: #9ab7d4;\n    height: 10vh;\n    font-size: 2.5em;\n    display: flex;\n    align-items: center;\n    padding: 25px;\n    box-sizing: border-box;\n    justify-content: space-between;\n}\n\nmain {\n    height: max-content;\n    color: #112a46;\n    flex-grow: 1;\n    width: 100%;\n    height: 90vh;\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n@font-face {\n    font-family: 'videophreak';\n    src: url('./videophreak/VIDEOPHREAK.ttf');\n}\n\nheader > p {\n    font-family: 'videophreak';\n}\n\nheader > img {\n    --sizing: 1.7em;\n    height: var(--sizing);\n    width: var(--sizing);\n}\n\n.cont {\n    position: relative;\n    margin-top: 100px;\n    width: 100vw;\n    bottom: 50px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    gap: 12px;\n    flex-wrap: wrap;\n    row-gap: 40px;\n}\n\n.gameboard1,\n.gameboard2,\n.secbox {\n    min-width: 250px;\n    min-height: 250px;\n    height: 40vh;\n    width: 40vh;\n    max-height: 400px;\n    max-width: 400px;\n    background: #9ab7d4;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n}\n\n.secbox {\n    border: 2px solid black;\n}\n.gameboard1 > div,\n.gameboard2 > div {\n    flex-grow: 1;\n    display: flex;\n}\n\n.gameboard1 > div > div,\n.gameboard2 > div > div {\n    border: 1px solid black;\n    flex-grow: 1;\n}\n\n.secbox {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    font-size: 4vw;\n    align-items: center;\n}\n\n.cont > div > button {\n    font-size: 0.8em;\n    width: 60%;\n    background: #acc8e5;\n    border: 2px solid black;\n    border-radius: 100px;\n    height: 40px;\n    font-size: 1em;\n}\n\n.secbox > div {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr;\n    gap: 8px;\n}\n\n.secbox > div > p:first-of-type {\n    font-size: 1.1em;\n}\n\n.secbox > div > p {\n    text-align: center;\n}\n\n.cont > div > button:hover {\n    transform: scale(1.05);\n    transition: transform 0.2s;\n}\n\n.gameboard1,\n.gameboard2,\nbutton {\n    cursor: pointer;\n}\n\n.cont p {\n    text-align: center;\n    font-size: 1.3em;\n    margin-bottom: 8px;\n}\n\n.cont > div:first-of-type {\n    margin-top: 100px;\n}\n.gm2 {\n    visibility: hidden;\n    position: absolute;\n}\n\n.cont > div:last-of-type {\n    position: absolute;\n    height: 100px;\n    width: clamp(200px, 40vw, 500px);\n    bottom: 50vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n    background: #9ab7d4;\n    justify-content: center;\n    border: 2px solid black;\n    border-radius: 10px;\n}\n\n.preview,\n.placed {\n    background: #077187;\n}\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},960:(n,e,t)=>{n.exports=t.p+"9a02de9e536394ee0026.ttf"}},m={};function b(n){var e=m[n];if(void 0!==e)return e.exports;var t=m[n]={id:n,exports:{}};return f[n](t,t.exports,b),t.exports}b.m=f,b.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return b.d(e,{a:e}),e},b.d=(n,e)=>{for(var t in e)b.o(e,t)&&!b.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},b.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),b.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;b.g.importScripts&&(n=b.g.location+"");var e=b.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&!n;)n=t[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),b.p=n})(),b.b=document.baseURI||self.location.href,b.nc=void 0,n=b(379),e=b.n(n),t=b(795),o=b.n(t),r=b(569),a=b.n(r),i=b(565),A=b.n(i),c=b(216),s=b.n(c),d=b(589),l=b.n(d),p=b(426),(u={}).styleTagTransform=l(),u.setAttributes=A(),u.insert=a().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=s(),e()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals,(()=>{const n=function(n,e){const t=[],o=[];let r=!0;const a=[];for(let n=0;n<10;n++)t.push([]);return t.forEach((n=>{for(let e=0;e<10;e++)n[e]=!1})),{getBoard:()=>t,place:(n,e,a)=>{let i=1;o.push(a);const A=o[o.indexOf(a)];if(r)for(let r=0;r<A.getLength();r++)e-r-1<0?t[n-1][parseInt(e,10)-1+i++]=o.indexOf(a):t[n-1][e-r-1]=o.indexOf(a);else for(let r=0;r<A.getLength();r++)parseInt(n,10)+r>t.length?t[n-i++][e-1]=o.indexOf(a):t[n-1+r][e-1]=o.indexOf(a)},receiveAttack:(n,e)=>{const r=t[n-1][e-1];"number"==typeof r&&r>=0&&o[r].hit(),a.push([n-1,e-1])},attackHistory:()=>a,allSunk:()=>o.every((n=>n.isSunk())),changeAxis:()=>{r=!r},previewPlace:(n,e,t)=>{document.querySelector(".hovering")&&document.querySelector(".hovering").classList.remove("hovering"),document.querySelectorAll(".gameboard1>div>div")[10*parseInt(n,10)+parseInt(e,10)-11].classList.add("hovering");let o=1;const a=document.querySelectorAll(".preview");if(a.length>0&&a.forEach((n=>{n.classList.remove("preview")})),r)for(let r=0;r<t;r++)parseInt(e,10)-1-r<0?document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11+o++].classList.add("preview"):document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11-r].classList.add("preview");else for(let r=0;r<t;r++)n-1+r>9?document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11-10*o++].classList.add("preview"):document.querySelectorAll(".gameboard1 > div > div")[10*parseInt(n,10)+parseInt(e,10)-11+10*r].classList.add("preview")}}}(),e=document.querySelector(".gameboard1"),t=document.querySelector(".gameboard2");let o=!1;const r=n=>{for(let e=0;e<10;e++){const t=document.createElement("div");t.setAttribute("data",e+1);for(let n=0;n<10;n++){const e=document.createElement("div");e.setAttribute("data",n+1),t.appendChild(e)}n.appendChild(t)}};r(e),r(t),document.querySelector(".cont > div > button").addEventListener("click",(()=>{n.changeAxis(),document.querySelectorAll(".preview").forEach((n=>{n.classList.remove("preview")}))}));const a=e=>{const t=[];document.querySelectorAll(".gameboard1 div div").forEach((r=>{r.addEventListener("mouseover",(()=>{n.previewPlace(r.parentNode.getAttribute("data"),r.getAttribute("data"),5-e)})),r.addEventListener("click",(()=>{document.querySelectorAll(".preview").forEach((n=>{n.classList.contains("placed")?t.push(!0):t.push(!1)})),t.includes(!0)?o=!1:(o=!0,n.place(r.parentNode.getAttribute("data"),r.getAttribute("data"),function(n){const e=n;let t=0;return{getLength:()=>e,getHits:()=>t,isSunk:()=>t>=e,hit:()=>{t++}}}(5-e)),document.querySelectorAll(".preview").forEach((n=>{n.classList.add("placed")})))}))}))},i=n=>{const e=n.cloneNode(!0),t=n.parentNode;t.removeChild(n),t.appendChild(e)};function A(e){console.log(e),document.querySelector(".gameboard1").addEventListener("click",(()=>{o?(i(document.querySelector(".gameboard1")),e<4?(a(Math.floor(e)),A(e>=2&&e<3&&o?e+.5:o?e+1:e)):console.log(n.getBoard())):a(2===e?e-1:3===e?Math.floor(e-.5):4===e?3:e)}))}a(0),document.querySelector(".gameboard1").addEventListener("click",(()=>{i(document.querySelector(".gameboard1")),a(1),A(2)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,